# Rendered from .github/workflows/build.yml.jinja

name: archlinux

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build-amd64-v0-20-2:
    name: amd64, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch amd64 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v0.20.2 \
          --push

  build-amd64-v1-0-10:
    name: amd64, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.0.10 \
          --push

  build-amd64-v1-2-8:
    name: amd64, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.2.8 \
          --push

  build-amd64-v1-4-0:
    name: amd64, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch amd64 \
          --nim-version v1.4.0 \
          --push



  build-arm32v6-v0-20-2:
    name: arm32v6, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v0.20.2 \
          --push

  build-arm32v6-v1-0-10:
    name: arm32v6, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.0.10 \
          --push

  build-arm32v6-v1-2-8:
    name: arm32v6, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.2.8 \
          --push

  build-arm32v6-v1-4-0:
    name: arm32v6, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v6 \
          --nim-version v1.4.0 \
          --push



  build-arm32v7-v0-20-2:
    name: arm32v7, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v0.20.2 \
          --push

  build-arm32v7-v1-0-10:
    name: arm32v7, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.0.10 \
          --push

  build-arm32v7-v1-2-8:
    name: arm32v7, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.2.8 \
          --push

  build-arm32v7-v1-4-0:
    name: arm32v7, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm32v7 \
          --nim-version v1.4.0 \
          --push



  build-arm64v8-v0-20-2:
    name: arm64v8, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v0.20.2 \
          --push

  build-arm64v8-v1-0-10:
    name: arm64v8, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.0.10 \
          --push

  build-arm64v8-v1-2-8:
    name: arm64v8, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.2.8 \
          --push

  build-arm64v8-v1-4-0:
    name: arm64v8, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro archlinux \
          --arch arm64v8 \
          --nim-version v1.4.0 \
          --push




  push_manifest_v0-20-2:
    name: Push manifest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')}}

    runs-on: ubuntu-latest
    needs:
    - build-amd64-v0-20-2

    - build-arm32v6-v0-20-2

    - build-arm32v7-v0-20-2

    - build-arm64v8-v0-20-2


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push manifest
      run: |
        ./builder.py push-manifest \
          --distro archlinux \
          --nim-version v0.20.2

  push_manifest_v1-0-10:
    name: Push manifest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')}}

    runs-on: ubuntu-latest
    needs:
    - build-amd64-v1-0-10

    - build-arm32v6-v1-0-10

    - build-arm32v7-v1-0-10

    - build-arm64v8-v1-0-10


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push manifest
      run: |
        ./builder.py push-manifest \
          --distro archlinux \
          --nim-version v1.0.10

  push_manifest_v1-2-8:
    name: Push manifest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')}}

    runs-on: ubuntu-latest
    needs:
    - build-amd64-v1-2-8

    - build-arm32v6-v1-2-8

    - build-arm32v7-v1-2-8

    - build-arm64v8-v1-2-8


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push manifest
      run: |
        ./builder.py push-manifest \
          --distro archlinux \
          --nim-version v1.2.8

  push_manifest_v1-4-0:
    name: Push manifest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')}}

    runs-on: ubuntu-latest
    needs:
    - build-amd64-v1-4-0

    - build-arm32v6-v1-4-0

    - build-arm32v7-v1-4-0

    - build-arm64v8-v1-4-0


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push manifest
      run: |
        ./builder.py push-manifest \
          --distro archlinux \
          --nim-version v1.4.0
