# Rendered from .github/workflows/build.yml.jinja

name: debian:buster

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build-amd64:
    name: amd64
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --tag $(basename ${{ github.event.ref }}) \
          --push
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch amd64 \
          --tag $(basename ${{ github.event.ref }})

  build-i386:
    name: i386
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --tag $(basename ${{ github.event.ref }}) \
          --push
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch i386 \
          --tag $(basename ${{ github.event.ref }})

  build-arm32v7:
    name: arm32v7
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --tag $(basename ${{ github.event.ref }}) \
          --push
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm32v7 \
          --tag $(basename ${{ github.event.ref }})

  build-arm64v8:
    name: arm64v8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --tag $(basename ${{ github.event.ref }}) \
          --push
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm64v8 \
          --tag $(basename ${{ github.event.ref }})

  build-ppc64le:
    name: ppc64le
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --tag $(basename ${{ github.event.ref }}) \
          --push
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch ppc64le \
          --tag $(basename ${{ github.event.ref }})

  build-s390x:
    name: s390x
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --tag $(basename ${{ github.event.ref }}) \
          --push
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch s390x \
          --tag $(basename ${{ github.event.ref }})


  push_manifests:
    name: Push manifest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
      }}

    runs-on: ubuntu-latest
    needs:
    - build-amd64

    - build-i386

    - build-arm32v7

    - build-arm64v8

    - build-ppc64le

    - build-s390x


    strategy:
      matrix:
        include:
        - manifest_tag: latest
          image_tag: ${{ github.ref }}
        - manifest_tag: ${{ github.ref }}
          image_tag: ${{ github.ref }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push manifest
      run: |-
        ./builder.py push-manifest \
          --distro debian:buster \
          --manifest-tag $(basename ${{ matrix.manifest_tag }}) \
          --image-tag $(basename ${{ matrix.image_tag }})
