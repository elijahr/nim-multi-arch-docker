# Rendered from .github/workflows/build.yml.jinja

name: debian:buster

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build-amd64-v0-20-2:
    name: amd64, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v0.20.2 \
          --push

  build-amd64-v1-0-10:
    name: amd64, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.0.10 \
          --push

  build-amd64-v1-2-8:
    name: amd64, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.2.8 \
          --push

  build-amd64-v1-4-0:
    name: amd64, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch amd64 \
          --nim-version v1.4.0 \
          --push



  build-i386-v0-20-2:
    name: i386, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch i386 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v0.20.2 \
          --push

  build-i386-v1-0-10:
    name: i386, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.0.10 \
          --push

  build-i386-v1-2-8:
    name: i386, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.2.8 \
          --push

  build-i386-v1-4-0:
    name: i386, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch i386 \
          --nim-version v1.4.0 \
          --push



  build-arm32v7-v0-20-2:
    name: arm32v7, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v0.20.2 \
          --push

  build-arm32v7-v1-0-10:
    name: arm32v7, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.0.10 \
          --push

  build-arm32v7-v1-2-8:
    name: arm32v7, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.2.8 \
          --push

  build-arm32v7-v1-4-0:
    name: arm32v7, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm32v7 \
          --nim-version v1.4.0 \
          --push



  build-arm64v8-v0-20-2:
    name: arm64v8, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v0.20.2 \
          --push

  build-arm64v8-v1-0-10:
    name: arm64v8, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.0.10 \
          --push

  build-arm64v8-v1-2-8:
    name: arm64v8, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.2.8 \
          --push

  build-arm64v8-v1-4-0:
    name: arm64v8, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch arm64v8 \
          --nim-version v1.4.0 \
          --push



  build-ppc64le-v0-20-2:
    name: ppc64le, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v0.20.2 \
          --push

  build-ppc64le-v1-0-10:
    name: ppc64le, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.0.10 \
          --push

  build-ppc64le-v1-2-8:
    name: ppc64le, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.2.8 \
          --push

  build-ppc64le-v1-4-0:
    name: ppc64le, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch ppc64le \
          --nim-version v1.4.0 \
          --push



  build-s390x-v0-20-2:
    name: s390x, v0.20.2
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v0.20.2
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch s390x \
          --nim-version v0.20.2
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v0.20.2 \
          --push

  build-s390x-v1-0-10:
    name: s390x, v1.0.10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.0.10
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.0.10
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.0.10 \
          --push

  build-s390x-v1-2-8:
    name: s390x, v1.2.8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.2.8
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.2.8
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.2.8 \
          --push

  build-s390x-v1-4-0:
    name: s390x, v1.4.0
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Build image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.4.0
    - name: Test
      run: |
        ./builder.py test \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.4.0
    - name: Push image
      run: |
        ./builder.py build \
          --distro debian:buster \
          --arch s390x \
          --nim-version v1.4.0 \
          --push



  push_manifests:
    name: Push manifest
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')}}

    runs-on: ubuntu-latest
    needs:
    - build-amd64-v0-20-2

    - build-amd64-v1-0-10

    - build-amd64-v1-2-8

    - build-amd64-v1-4-0



    - build-i386-v0-20-2

    - build-i386-v1-0-10

    - build-i386-v1-2-8

    - build-i386-v1-4-0



    - build-arm32v7-v0-20-2

    - build-arm32v7-v1-0-10

    - build-arm32v7-v1-2-8

    - build-arm32v7-v1-4-0



    - build-arm64v8-v0-20-2

    - build-arm64v8-v1-0-10

    - build-arm64v8-v1-2-8

    - build-arm64v8-v1-4-0



    - build-ppc64le-v0-20-2

    - build-ppc64le-v1-0-10

    - build-ppc64le-v1-2-8

    - build-ppc64le-v1-4-0



    - build-s390x-v0-20-2

    - build-s390x-v1-0-10

    - build-s390x-v1-2-8

    - build-s390x-v1-4-0



    strategy:
      matrix:
        include:
        - manifest_tag: latest
          image_tag: ${{ github.ref }}
        - manifest_tag: ${{ github.ref }}
          image_tag: ${{ github.ref }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install pip requirements
      run: |
        sudo apt-get install python3-setuptools
        pip3 install -r requirements.txt

    - name: Login to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
          -u elijahru --password-stdin

    - name: Push manifest
      run: |-
        ./builder.py push-manifest \
          --distro debian:buster \
          --nim-versions v0.20.2,v1.0.10,v1.2.8,v1.4.0 \
          --manifest-tag $(basename ${{ matrix.manifest_tag }}) \
          --image-tag $(basename ${{ matrix.image_tag }})
